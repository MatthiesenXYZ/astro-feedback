---
import { routeGenerator } from 'astro-feedback:routes';
import RedirectButton from '../../components/RedirectButton.astro';
import Heading from '../../components/headings/Heading.astro';
import GetIcon from '../../components/icons/GetIcon.astro';
import { getLangFromUrl, useTranslatedPath, useTranslations } from '../../i18n';
import DashboardLayout from '../../layouts/DashboardLayout.astro';
import { getUserMetadata } from '../../lib/GetMeta';
import { validateUser } from '../../lib/validateUser';

export const prerender = false;

const { matchedProjects, matchedTeams } = await getUserMetadata(Astro);

function matchTeamToId(teamId: string) {
	return matchedTeams.find((team) => {
		if (team && team.id === teamId) return team;
		return null;
	});
}

const v = await validateUser(Astro);
if (v) return v;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang, 'dashboard/projects/index');
const translatePath = useTranslatedPath(lang);
const {
	portal: { projects },
} = routeGenerator();
---
<DashboardLayout sideBarActiveItemID="projects" lang={lang}>
        
    <div class="flex flex-col w-full relative mt-14 md:mt-0">
        <Heading tag={'h1'}>{t('title')}</Heading>
        <div class="absolute bottom-0 right-2">
            <RedirectButton 
                link={translatePath(projects().newProject)} 
                class="btn btn-sm btn-outline btn-accent shadow-md">
                <span>{t('new-project')}</span>
                <GetIcon icon={'plus'} class='h-[1.5rem] w-[1.5rem]'/>
            </RedirectButton>
        </div>
    </div>

    <div class="divider my-4"></div>

    <div class="flex flex-col">

        { 
            matchedProjects.length > 0 
            ? matchedProjects.map(({ title, description, id, createdAt, teamId }) => (
                <div class="card bg-base-300 p-4 rounded-lg my-2">
                    <div class="card-body bg-base-200 flex flex-col w-full relative">
                        <span class="text-2xl font-bold text-secondary text-shadow-md shadow-black mt-2 md:mt-0">
                            {title}
                        </span>

                        {teamId && (
                            <span class="text-md text-accent mr-8 md:mr-10 line-clamp-2">
                                <strong>{t('team')}</strong> ━ {matchTeamToId(teamId)?.name}
                            </span>
                        )}

                        <span class="text-sm text-base mr-8 md:mr-10 line-clamp-2">
                            {description}
                        </span>

                        <span 
                            class="text-sm text-base-content opacity-70 absolute top-6 right-4"
                            >
                                {t('created')} ━ {createdAt.toLocaleDateString()}
                        </span>

                        <div class="absolute bottom-2 right-2">
                            <RedirectButton
                                link={translatePath(projects(id).viewProject)}
                                class="btn btn-sm md:btn-md btn-outline btn-accent shadow-md"
                                >
                                <GetIcon icon={'view'} class='h-[1.5rem] w-[1.5rem]'/>
                            </RedirectButton>
                        </div>

                    </div>
                </div>
            ))
            : (
                <div class="card bg-base-300 p-4 rounded-lg my-2">
                    <div class="card-body bg-base-200 flex flex-col w-full relative">
                        <span class="text-2xl font-bold text-secondary text-shadow-md shadow-black">
                            {t('no-projects')}
                        </span>
                        <span class="text-sm -base">
                            {t('no-projects-description')}
                        </span>
                    </div>
                </div>
            )
        }

    </div>
</DashboardLayout>