---
import routes from 'astro-feedback:routes';
import { Image } from 'astro:assets';
import { getLangFromUrl, useTranslatedPath, useTranslations } from '../i18n';
import { getUserMetadata } from '../lib/GetMeta';
import GetIcon from './icons/GetIcon.astro';
import DialogHeader from './userWidgetParts/DialogHeader.astro';
import MatchedProjectsSection from './userWidgetParts/MatchedProjectsSection.astro';
import OpenSubmissionsSection from './userWidgetParts/OpenSubmissionsSection.astro';
import QuickActionsSection from './userWidgetParts/QuickActionsSection.astro';

// Get the user metadata
const { matchedProjects, matchedSubmissions, userAvatar, userData, isLoggedIn } =
	await getUserMetadata(Astro);

// Get the language and translations
const referer = Astro.request.headers.get('referer');

if (!referer) {
	throw new Error('No referer found');
}

const lang = getLangFromUrl(new URL(referer));
const t = useTranslations(lang, 'components/user-widget');
const translatePath = useTranslatedPath(lang);
---
<div class="indicator">
    <button 
        id="avatar_button"
        class="avatar-button tooltip tooltip-bottom tooltip-accent font-bold mr-2" 
        data-tip={`${userData && userData.name}`}
        data-isloggedin={isLoggedIn ? 'true' : 'false'}
        onclick="openUserPanel()"
        contextmenu="user_panel_menu"
        >
        <Image 
            src={userAvatar} 
            height={128} 
            width={128} 
            loading={'eager'}
            inferSize
            alt={`${userData && userData.name}`}
            class="w-full h-full object-cover rounded-full"
            />
            { matchedSubmissions.length > 0 && 
                <span 
                    class="open-submissions indicator-item indicator-bottom indicator-center badge badge-sm badge-info"
                    >{matchedSubmissions.length}
                </span> 
            }
    </button>
</div>

<menu id="user_panel_menu" type="context" class="bg-neutral rounded-md p-2">

    <button 
        id="user_panel_menu_open" 
        class="btn btn-primary" 
        type="button"
        onclick="openUserPanel()">
        <GetIcon icon={'profile'} class='h-[1.2rem] w-[1.2rem] inline'/>    
        <span id="ui-components-user-widget-contextmenu-open-panel">{t('contextmenu-open-panel')}</span>
    </button>
    
    <button 
        id="user_panel_menu_dashboard" 
        class="btn btn-secondary" 
        type="button" 
        data-route={translatePath(routes.portal.index)}
        onclick="redirectTo(this)">
        <GetIcon icon={'dashboard'} class='h-[1.2rem] w-[1.2rem] inline'/>
        <span id="ui-components-user-widget-contextmenu-dashboard">{t('contextmenu-dashboard')}</span>
    </button>
    
    <button 
        id="user_panel_menu_logout" 
        class="btn btn-error" 
        type="button" 
        data-route={translatePath(routes.portal.logout)}
        onclick="redirectTo(this)">
        <GetIcon icon={'logout'} class='h-[1.2rem] w-[1.2rem] inline'/>    
        <span id="ui-components-user-widget-contextmenu-logout">{t('contextmenu-logout')}</span>
    </button>

    {/* Cancel Button */}
    <div class="flex flex-row-reverse">
        <button 
            id="user_panel_menu_cancel" 
            class="btn btn-sm btn-circle btn-outline text-neutral-content" 
            type="button"
            onclick="closeUserPanelContextMenu()">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>
    </div>
</menu>

<dialog id="user_panel" class="modal modal-bottom sm:modal-middle">
    <div class="modal-box min-w-[100vw] sm:min-w-[80vw] max-w-5xl min-h-[40vh] max-h-[90vh]">

        <DialogHeader UserAvatar={userAvatar} user={userData} />

        <div class="divider my-4" />

        <div class="flex flex-col md:flex-row w-full">

            <OpenSubmissionsSection matchedSubmissions={matchedSubmissions} routes={routes} />

            <div class="flex-none divider md:divider-horizontal mx-2" />

            <QuickActionsSection userId={userData?.id} />

            <div class="flex-none divider md:divider-horizontal mx-2" />

            <MatchedProjectsSection matchedProjects={matchedProjects} routes={routes} />

        </div>

        <div class="divider my-4" />

        {/* Footer */}

    </div>
    <form method="dialog" class="modal-backdrop">
        <button><span id="ui-components-user-widget-close">{t('dialog-close')}</span></button>
    </form>
</dialog>
    
<script is:inline>

    // Get the Avatar Button
    const avatar = document.getElementById('avatar_button');
    const userPanel = document.getElementById('user_panel');
    const userPanelMenu = document.getElementById('user_panel_menu');

    // Check if the user is logged in
    const isLoggedIn = avatar.dataset.isloggedin;

    // Show the Avatar Button if the user is logged in
    if (isLoggedIn === 'true') {
        // Fade in the Avatar Button
        setTimeout(() => {
            avatar.style.display = 'block';
            setTimeout(() => {
                avatar.style.opacity = "1";
            }, 250);
        }, 200);
    }

    function closeUserPanelContextMenu() {
        if (userPanelMenu.style.display === 'flex')
        userPanelMenu.style.display = 'none';
    }

    function toggleUserPanelContextMenu(event, element) {
        event.preventDefault();
        if (
            !element.style.display 
            || element.style.display === 'none'
        ) {
            element.style.display = 'flex';
        } else {
            element.style.display = 'none';
        }
        
    }

    function openUserPanel() {
        closeUserPanelContextMenu();
        userPanel.showModal();
    };

    function redirectTo(ele) {
        closeUserPanelContextMenu();
        window.location.href = ele.dataset.route;
    };

    avatar.addEventListener('contextmenu', (event) => 
        toggleUserPanelContextMenu(event, userPanelMenu)
    );
</script>

<style>
    .open-submissions {
        position: relative;
        top: -60px;
        left: -2px;
        font-weight: 700;
        height: 1.5rem;
        width: 1.5rem;
        border: 0.125rem solid;
        z-index: 99999;
    }

    .avatar-button {
        background-color: oklch(var(--b2));
        border-radius: 50%;
        border: 0.125rem solid;
        border-color: oklch(var(--a));
        box-shadow: 0 0 0.25rem 0.015rem rgba(0, 0, 0, 0.694);
        width: 2.5rem;
        height: 2.5rem;
        cursor: pointer;
        display: none;
        opacity: 0;
        z-index: 99998;
        transition: opacity 1s ease;
    }

    #user_panel_menu {
        position: absolute;
        display: none;
        flex-direction: column;
        gap: 0.5rem;
        left: -10rem;
        top: 3rem;
        width: 13rem;
        z-index: 99999;
    }

    #user_panel_menu_cancel {
        border-radius: 50%;
    }
</style>