---
import type { HTMLAttributes } from 'astro/types';

// biome-ignore lint/suspicious/noExplicitAny: <explanation>
type AstroComponent = (_props: Record<string, any>) => any;

type currentIcons =
	| 'asterisk'
	| 'back'
	| 'feedback'
	| 'github'
	| 'login'
	| 'mail'
	| 'menu'
	| 'project'
	| 'separator'
	| 'submit'
	| 'dashboard'
	| 'profile'
	| 'logout'
	| 'view'
	| 'subject'
	| 'link'
	| 'team'
	| 'users'
	| 'plus'
	| 'edit'
	| 'description'
	| 'star';

export type { currentIcons };

// Map of icon names to Astro components
const Components: Record<currentIcons, AstroComponent> = {
	asterisk: (await import('./Asterisk.astro')).default,
	back: (await import('./Back.astro')).default,
	feedback: (await import('./Feedback.astro')).default,
	github: (await import('./Github.astro')).default,
	login: (await import('./Login.astro')).default,
	mail: (await import('./Mail.astro')).default,
	menu: (await import('./Menu.astro')).default,
	project: (await import('./Project.astro')).default,
	separator: (await import('./Separator.astro')).default,
	submit: (await import('./Submit.astro')).default,
	dashboard: (await import('./Dashboard.astro')).default,
	profile: (await import('./Profile.astro')).default,
	logout: (await import('./Logout.astro')).default,
	view: (await import('./View.astro')).default,
	subject: (await import('./Subject.astro')).default,
	link: (await import('./Link.astro')).default,
	team: (await import('./Team.astro')).default,
	users: (await import('./UserManagement.astro')).default,
	plus: (await import('./Plus.astro')).default,
	edit: (await import('./Edit.astro')).default,
	description: (await import('./Description.astro')).default,
	star: (await import('./Star.astro')).default,
};

interface Props extends HTMLAttributes<'svg'> {
	icon: currentIcons;
	width?: number;
	height?: number;
}

const { icon, width, height, ...props } = Astro.props;

const Tag = Components[icon];
---
<Tag width={width} height={height} {...props} />