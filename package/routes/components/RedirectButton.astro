---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'button'> {
	link: string;
}

const { link, ...props } = Astro.props;
---

<redirect-button link={link} {...props}>
    <slot></slot>
</redirect-button>

<script>
    // Check if the custom element is already defined (exists) before defining it
    if (!customElements.get('redirect-button')) {
        // Create the custom element class
        class RedirectButton extends HTMLElement {
            constructor() {
                super();
                // Create a shadow root
                const shadow = this.attachShadow({ mode: 'open' });
                // Get link attribute value
                const link = this.getAttribute('link');

                // Create elements
                const slot = document.createElement('slot');
    
                // Append slotted children to the button
                shadow.appendChild(slot);

                // Add event listener to button
                this.addEventListener('click', () => window.location.href = link!);
            }
        }
        // "Define" (add) the custom element to the window
        customElements.define('redirect-button', RedirectButton);
    }
</script>