---
import type { RouteMap } from 'astro-feedback:routes';
import type { tsProject } from '../../../db/tsTables';
import { getLangFromUrl, useTranslations } from '../../i18n';
import Heading from '../headings/Heading.astro';
import MatchedProjects from './MatchedProjects.astro';
import NoMatchedProjects from './NoMatchedProjects.astro';

// Get the language and translations
const referer = Astro.request.headers.get('referer');

if (!referer) {
	throw new Error('No referer found');
}

const lang = getLangFromUrl(new URL(referer));
const t = useTranslations(lang, 'components/user-widget');

interface Props {
	matchedProjects: (typeof tsProject.$inferSelect)[];
	routes: RouteMap;
}

const { matchedProjects, routes } = Astro.props;
---
<div class="flex-none md:w-[25%] md:max-w-[28%] gap-2">
    <Heading tag={'h4'}>
        <span class="text-secondary">{t('matched-projects')}</span>
    </Heading>
    
    <div class="divider my-2" />

    { 
        matchedProjects.length > 0 
        ? matchedProjects.map((project) => 
        ( <MatchedProjects {project} {routes} /> )) 
        : <NoMatchedProjects /> 
    }
</div>
