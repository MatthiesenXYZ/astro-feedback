---
import type { RouteMap } from 'astro-feedback:routes';
import type { tsProject } from '../../../db/tsTables';
import Heading from '../headings/Heading.astro';
import MatchedProjects from './MatchedProjects.astro';
import NoMatchedProjects from './NoMatchedProjects.astro';

interface Props {
	matchedProjects: (typeof tsProject.$inferSelect)[];
	routes: RouteMap;
}

const { matchedProjects, routes } = Astro.props;
---
<div class="flex-none md:w-[25%] md:max-w-[28%] gap-2">
    <Heading tag={'h4'}>
        <span class="text-secondary" id="ui-components-user-widget-matched-projects">Your Projects</span>
    </Heading>
    
    <div class="divider my-2" />

    { 
        matchedProjects.length > 0 
        ? matchedProjects.map((project) => 
        ( <MatchedProjects {project} {routes} /> )) 
        : <NoMatchedProjects /> 
    }
</div>

<script>
import { $i18n, updateUiString } from "../../store/i18n.ts";
import enJson from '../../store/translations/en.json';
    
    const i18n = $i18n('components/user-widget', enJson['components/user-widget']);
    
    i18n.subscribe(t => {
        updateUiString({
            element: "ui-components-user-widget-matched-projects",
            translation: t['matched-projects']
        })
    });
</script>