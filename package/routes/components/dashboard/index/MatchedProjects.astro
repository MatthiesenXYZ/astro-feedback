---
import { routeGenerator } from 'astro-feedback:routes';
import type { tsProject } from '../../../../db/tsTables';
import { getLangFromUrl, useTranslatedPath } from '../../../i18n';
import RedirectButton from '../../RedirectButton.astro';
import GetIcon from '../../icons/GetIcon.astro';

interface Props {
	matchedProjects: (typeof tsProject.$inferSelect)[];
}

const { matchedProjects } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);
const {
	portal: { projects },
} = routeGenerator();
---
{ matchedProjects.length > 0 && (
    <div class="col-span-1 dashboard-card">
        <div class="flex flex-col items-center rounded-lg bg-base-300 gap-2 p-4 h-full">
            <slot />
            
            <div class="divider my-0"></div>

            {
                matchedProjects.map(({ title, description, id }) => (
                    <div class="flex flex-row items-center justify-between p-4 w-full bg-base-200 rounded-lg shadow-lg">
                        <div class="flex flex-col w-full relative">
                            <span class="text-md font-bold text-secondary pb-2">{title}</span>
                            <p class="text-sm mr-8 md:mr-10 line-clamp-2">{description}</p>
                            <div class="absolute bottom-0 right-0">
                                <RedirectButton 
                                    link={translatePath(projects(id).viewProject)} 
                                    class="btn btn-sm btn-outline btn-accent shadow-md"
                                    >
                                    <GetIcon icon={'view'} class='h-[1rem] w-[1rem]'/>
                                </RedirectButton>
                            </div>
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
)}